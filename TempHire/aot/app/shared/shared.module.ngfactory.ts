/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '../../../app/shared/shared.module';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/common/src/localization';
import * as import4 from '../../../app/shared/services/unit-of-work';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/i18n/tokens';
import * as import7 from '../../../app/core/services/entity-manager-provider';
class SharedModuleInjector extends import0.NgModuleInjector<import1.SharedModule> {
  _CommonModule_0:import2.CommonModule;
  _SharedModule_1:import1.SharedModule;
  __NgLocalization_2:import3.NgLocaleLocalization;
  __UnitOfWork_3:import4.UnitOfWork;
  constructor(parent:import5.Injector) {
    super(parent,[],[]);
  }
  get _NgLocalization_2():import3.NgLocaleLocalization {
    if ((this.__NgLocalization_2 == (null as any))) { (this.__NgLocalization_2 = new import3.NgLocaleLocalization(this.parent.get(import6.LOCALE_ID))); }
    return this.__NgLocalization_2;
  }
  get _UnitOfWork_3():import4.UnitOfWork {
    if ((this.__UnitOfWork_3 == (null as any))) { (this.__UnitOfWork_3 = new import4.UnitOfWork(this.parent.get(import7.EntityManagerProvider))); }
    return this.__UnitOfWork_3;
  }
  createInternal():import1.SharedModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._SharedModule_1 = new import1.SharedModule();
    return this._SharedModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import1.SharedModule)) { return this._SharedModule_1; }
    if ((token === import3.NgLocalization)) { return this._NgLocalization_2; }
    if ((token === import4.UnitOfWork)) { return this._UnitOfWork_3; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const SharedModuleNgFactory:import0.NgModuleFactory<import1.SharedModule> = new import0.NgModuleFactory(SharedModuleInjector,import1.SharedModule);